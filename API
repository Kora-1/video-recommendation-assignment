from pyngrok import ngrok
import nest_asyncio
import uvicorn
from fastapi import FastAPI
from pydantic import BaseModel
import numpy as np
from tensorflow.keras.models import load_model


# Load model
model = load_model('/content/my_model1.keras')

app = FastAPI()

class VideoInput(BaseModel):
    numerical_features: list
    title: str

@app.get("/")
def home():
    return {"message": "Video Recommendation API is running!"}

@app.post("/predict")
def predict(data: VideoInput):
    numerical_input = np.array([data.numerical_features])
    title_input = np.array([data.title], dtype=object)
    prediction = model.predict({
        "numerical_input": numerical_input,
        "title_input": title_input
    })
    probability = float(prediction[0][0])
    return {
        "prediction": "Recommended" if probability > 0.5 else "Not Recommended",
        "probability": probability
    }

# Start FastAPI
uvicorn.run(app, host="0.0.0.0", port=8000)
